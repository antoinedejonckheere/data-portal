{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"/data/work/bikedataproject/heatmap-experiment/index.html","resolved":"/usr/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"}],"generated":{"html":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Create a heatmap layer</title>\n    <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\">\n    <script src=\"https://api.mapbox.com/mapbox-gl-js/v1.11.1/mapbox-gl.js\"></script>\n    <link href=\"https://api.mapbox.com/mapbox-gl-js/v1.11.1/mapbox-gl.css\" rel=\"stylesheet\">\n    <style>body {\n            margin: 0;\n            padding: 0;\n        }\n\n        #map {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            width: 100%;\n        }\n\n        .map-overlay {\n            font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;\n            background-color: #fff;\n            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n            border-radius: 3px;\n            position: absolute;\n            width: 25%;\n            top: 10px;\n            left: 10px;\n            padding: 10px;\n            display: none;\n        }</style>\n</head>\n\n<body>\n    <div id=\"map\"></div>\n    <div id=\"map-overlay\" class=\"map-overlay\"></div>\n\n    <script>var map = new mapboxgl.Map({\n  container: 'map',\n  //style: 'https://api.maptiler.com/maps/3327a63f-c15d-462a-9f23-ebf73a14254a/style.json?key=2Piy1GKXoXq0rHzzBVDA',\n  style: 'https://api.maptiler.com/maps/7e7e2443-1c41-46d0-813c-f6b11c2c0225/style.json?key=2Piy1GKXoXq0rHzzBVDA',\n  center: [4.3525, 50.8454],\n  zoom: 14,\n  hash: true,\n  maxZoom: 17\n});\nmap.addControl(new mapboxgl.NavigationControl());\nvar overlay = document.getElementById('map-overlay');\nvar popup = new mapboxgl.Popup({\n  closeButton: false\n});\nmap.on('load', function () {\n  // get lowest label and road.\n  var style = map.getStyle();\n  var lowestRoad = undefined;\n  var lowestLabel = undefined;\n  var lowestSymbol = undefined;\n\n  for (var l = 0; l < style.layers.length; l++) {\n    var layer = style.layers[l];\n\n    if (layer && layer[\"source-layer\"] === \"transportation\") {\n      if (!lowestRoad) {\n        lowestRoad = layer.id;\n      }\n    }\n\n    if (layer && layer[\"source-layer\"] === \"transportation_name\") {\n      if (!lowestLabel) {\n        lowestLabel = layer.id;\n      }\n    }\n\n    if (layer && layer.type == \"symbol\") {\n      if (!lowestSymbol) {\n        lowestSymbol = layer.id;\n      }\n    }\n  }\n\n  map.addSource(\"earthquakes\", {\n    type: 'vector',\n    //url: 'https://bikedataproject.github.io/heatmap-experiment/mvt.json',\n    //url: 'http://localhost:8081/tiles/mvt-local.json'\n    url: 'https://api.bikedataproject.org/tiles/heatmap/mvt.json'\n  });\n  map.addLayer({\n    'id': 'earthquakes-heat',\n    'type': 'heatmap',\n    'source': 'earthquakes',\n    'source-layer': 'heatmap',\n    'visibility': 'none',\n    'paint': {\n      // Increase the heatmap weight based on frequency and property magnitude\n      'heatmap-weight': ['interpolate', ['linear'], ['zoom'], 0, ['/', ['get', 'cost'], 10000], 14, ['/', ['get', 'cost'], 3000], 20, ['/', ['get', 'cost'], 50]],\n      // Increase the heatmap color weight weight by zoom level\n      // heatmap-intensity is a multiplier on top of heatmap-weight\n      'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 7, 1, 20, 6],\n      // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n      // Begin color ramp at 0-stop with a 0-transparancy color\n      // to create a blur-like effect.\n      'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.3, 'rgb(255,0,0)', 1, 'rgba(255,220,75, 1)'],\n      // Adjust the heatmap radius by zoom level\n      'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 14, 10, 20, 20],\n      // Transition from heatmap to circle layer by zoom level\n      'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 0, 0.8, 7, 0.7, 20, 0.7]\n    }\n  }, lowestSymbol); // map.addSource(\"areas\", {\n  //     type: 'vector',\n  //     //url: 'https://api.bikedataproject.info/statistics/tiles/mvt-prod.json',\n  //     //url: 'https://bikedataproject.github.io/heatmap-experiment/areas/mvt.json'\n  //     url: 'http://localhost:8081/areas/mvt-local.json'\n  // });\n  // map.addLayer({\n  //     'id': 'areas-stats',\n  //     'type': 'fill',\n  //     'source': 'areas',\n  //     'source-layer': 'areas',\n  //     'paint': {\n  //         'fill-color': '#ffd700',\n  //         'fill-opacity': 0.1\n  //     }\n  // });\n  // map.addLayer({\n  //     'id': 'areas-stats-boundaries',\n  //     'type': 'line',\n  //     'source': 'areas',\n  //     'source-layer': 'areas',\n  //     'layout': {\n  //         'line-join': 'round',\n  //         'line-cap': 'round'\n  //     },\n  //     'paint': {\n  //         'line-color': '#ffd700',\n  //         'line-width': 1\n  //     }\n  // });\n  // map.addLayer(\n  //     {\n  //         'id': 'areas-stats-selected',\n  //         'type': 'fill',\n  //         'source': 'areas',\n  //         'source-layer': 'areas',\n  //         'paint': {\n  //             'fill-outline-color': '#484896',\n  //             'fill-color': '#6e599f',\n  //             'fill-opacity': 0.75\n  //         },\n  //         'filter': ['in', 'id', '']\n  //     }, 'areas-stats-boundaries');\n  // map.on('mousemove', 'areas-stats', function (e) {\n  //     map.getCanvas().style.cursor = 'pointer';\n  //     var feature = e.features[0];\n  //     console.log(feature);\n  //     overlay.innerHTML = '';\n  //     var title = document.createElement('strong');\n  //     title.textContent =\n  //         feature.properties.name;\n  //     var population = document.createElement('div');\n  //     population.textContent =\n  //         'Total KMs: ' + feature.properties.km + ' ' +                    \n  //         'Total Time: ' + feature.properties.seconds + ' ' +                    \n  //         'Total Trips: ' + feature.properties.count;\n  //     overlay.appendChild(title);\n  //     overlay.appendChild(population);\n  //     overlay.style.display = 'block';\n  //     map.setFilter('areas-stats-selected', [\n  //         'in',\n  //         'id',\n  //         feature.properties.id\n  //     ]);\n  //     popup\n  //         .setLngLat(e.lngLat)\n  //         .setText(feature.properties.name)\n  //         .addTo(map);\n  // });\n  // map.on('mouseleave', 'areas-stats', function () {\n  //     map.getCanvas().style.cursor = '';\n  //     popup.remove();\n  //     map.setFilter('areas-stats-selected', ['in', 'id', '']);\n  //     overlay.style.display = 'none';\n  // });\n});</script>\n\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"08cd68c88a879659252adada6db5dfb7","cacheData":{"env":{}}}